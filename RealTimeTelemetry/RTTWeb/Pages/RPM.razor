@page "/rpm"

@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util

<ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="600" Height="300" />
<button @onclick="@ChangeData">++</button>
<p @ref="_rpmCounter">
    @_config.Data.Datasets[0].Data[0]
</p>

@code {
    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;
    private ElementReference _rpmCounter;

    protected override void OnInitialized()
    {
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        pieSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
        _config.Data.Datasets.Add(pieSet);

        // ...

        System.Timers.Timer timer = new System.Timers.Timer(1000);   //initial start after 1 second
        timer.Elapsed += new System.Timers.ElapsedEventHandler(TimerElapsedMethod);
        timer.Start();
    }

    public async void ChangeData()
    {
        _config.Data.Datasets[0].Data[0]++;
        this.StateHasChanged();
    }

    private void TimerElapsedMethod(object sender, System.Timers.ElapsedEventArgs e)
    {
        _config.Data.Datasets[0].Data[0]++;
        _pieChartJs.Update();
    }
}
